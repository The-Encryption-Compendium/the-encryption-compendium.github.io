import{searchStatsComponent,searchResultComponent}from "./modules/components.min.js";const default_fuse_options={isCaseSensitive:false,findAllMatches:false,includeMatches:false,includeScore:false,useExtendedSearch:true,minMatchCharLength:1,shouldSort:true,threshold:0.1,location:0,distance:3000,keys:["title","abstract","authors"],};var searchResults={results:[],qtime:0,};function filter_by_tags(tags,entries){if(tags.length===0){return entries;}
return entries.filter((entry)=>tags.some((tag)=>"tags"in entry&&entry.tags.includes(tag)));}
function filter_by_text(text,entries){if(text.length===0){return entries;}
const fuse=new Fuse(entries,default_fuse_options);const results=fuse.search(text);return results.map((res)=>res.item);}
function search(text,tags,entries){let results=filter_by_tags(tags,entries);results=filter_by_text(text,results);return results;}
let query=new URLSearchParams(location.search).get("query");if(query===null){query="";}else{query=decodeURIComponent(query);}
let tags=new URLSearchParams(location.search).get("tags");if(tags===null){tags=[];}else{tags=JSON.parse(decodeURIComponent(tags));}
fetch("/data/entries.json").then(data=>{return data.json()}).then(entries=>{entries=entries.map(e=>{if(e.authors.length===0){e.authorString=null;}
else{e.authorString=e.authors.join(", ");}
e.tagString=e.tags.join(", ");return e;});const searchApp=Vue.createApp({components:{"search-stats":searchStatsComponent,"search-result":searchResultComponent,},data(){return{results:searchResults.results,nresults:searchResults.results.length,qtime:searchResults.qtime,};},methods:{run_search(){const input=document.getElementById("id_query").value;const start_time=new Date();const results=search(input,tags,entries);const end_time=new Date();this.$data.results=results;this.$data.qtime=end_time.getTime()-start_time.getTime();this.$data.nresults=results.length;}},delimiters:["[[","]]"],});const vm=searchApp.mount("#search-results");document.getElementById("id_query").value=query;vm.run_search();});